// let name = prompt("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?");
// alert (name);
let tempTc = prompt("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –ø–æ –¶–µ–ª—å—Å–∏—é")
alert(9/5 * tempTc + 32);

let name = "–í–∞—Å–∏–ª–∏–π"
let admin = "–í–∞—Å–∏–ª–∏–π"
console.log(admin)

const firstNumberBillet = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –±–∏–ª–µ—Ç–∞ 6 —Ü–∏—Ñ—Ä—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª");

console.log("üöÄ ~ file: js.js:11 ~ firstNumberBillet:", firstNumberBillet)

if (firstNumberBillet && firstNumberBillet.length === 7) {
    const arr = firstNumberBillet.split(' ');

    console.log("üöÄ ~ file: js.js:14 ~ arr:", arr)

    if (arr[0] === arr[1]) {
        alert("–£ –≤–∞—Å —Å—á–∞—Å—Ç–ª–∏–≤—ã–π –±–∏–ª–µ—Ç");
    } else {
        alert("–£ –≤–∞—Å –Ω–µ —Å—á–∞—Å—Ç–ª–∏–≤—ã–π –±–∏–ª–µ—Ç");
    }
}
  
const goodsCount = 0;

if (goodsCount > 0) {
    console.log (`–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ : ${goodsCount}`);
} else {
    console.log ('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞');
}

goodsCount > 0
? console.log(`–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ : ${goodsCount}`)
: console.log ('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞');

let text = goodsCount > 0 ? `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: ${goodsCount}` : `–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.`;
console.log(text);

const good = prompt('–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä—É–∫—Ç')

if (good === '–ë–∞–Ω–∞–Ω—ã') {
    alert('–¶–µ–Ω–∞ –Ω–∞ –±–∞–Ω–∞–Ω—ã 50 —Ä—É–±');

} else if (good === '–ú–∞–Ω–≥–æ') { 
alert('–ú–∞–Ω–≥–æ —Å—Ç–æ–∏—Ç 80 —Ä—É–±');
}
const good = prompt('–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä—É–∫—Ç')
switch (good) {
    case '–ë–∞–Ω–∞–Ω—ã':
        alert('–¶–µ–Ω–∞ –Ω–∞ –±–∞–Ω–∞–Ω—ã 50 —Ä—É–±')
        break;
    case '–ú–∞–Ω–≥–æ':
        alert('–ú–∞–Ω–≥–æ —Å—Ç–æ–∏—Ç 80 —Ä—É–±')
        break;
    default:
        alert('Go home')
}
const bananaStaff = '–ü—è—Ç–∏—Ö–∞—Ç'

 sayPrice() {
    alert('Please enter a price')
}
sayPrice()

let a = 1;
if (a === 1) {
    let a = 2;
  alert(a);
//   let a = 2;
}
alert(a);

function add () {
const sum = a + b;
return sum;
}

const mySum = add (2, 3);


function getGoodPrice(good) {
    switch (good) {
        case '–ë–∞–Ω–∞–Ω—ã' :
            return 50;
        case '–ú–∞–Ω–≥–æ' :
            return 80;
        case '–Ø–±–ª–æ–∫–∏' :
        case '–ì—Ä—É—à–∏' :
            return 40;
        default:
            return false;
    }
}

function getPriceByCount(good, count) {
    const price = getGoodPrice(good);
    if ( price === false) {
        console.error('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return false;
    }
    return price * count; 

}

console.log(getPriceByCount('–ú–∞–Ω–≥–æ', 5));
console.log(getPriceByCount('–ê–≤–∞–∫–∞–¥–æ', 15));

const mangoPrice = getGoodPrice('–ú–∞–Ω–≥–æ');
const avocadoPrice = getGoodPrice('–ê–≤–∞–∫–∞–¥–æ');

alert(mangoPrice);
alert(avocadoPrice);
alert(mangoPrice);

console.log(mangoPrice);

console.log(recursion1(3));

function recursion1(x) {
    if (x === 1) {
        return "1";
    }
    
    return recursion2(x - 1) + " " + x;
}

function recursion2(x) {
    if (x === 1) {
        return "1";
    }

    return recursion3(x - 1) + " " + x;
}

function recursion3(x) {
    if (x === 1) {
        return "1";
    }
    
    return recursion4(x - 1) + " " + x;
}

//–û–∫—Ä—É–≥—è–ª–µ—Ç —á–∏—Å–ª–æ –≤ –Ω–∏–∑(–æ—Å—Ç–∞—Ç–æ–∫)// Math.random() -> –í—ã–≤–æ–¥–∏—Ç –ø—Å–µ–≤–¥–æ—Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ –ü–ö –≤ –Ω–∞–Ω–æ —Å–µ–∫—É–Ω–¥–∞—Ö –¥–æ 0, —Ç.–µ 0.44234234
Math.floor(Math.random() * 100)
